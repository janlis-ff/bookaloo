# Generated by Django 5.1.8 on 2025-04-23 12:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('visitors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=480)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=380)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='books.author')),
            ],
        ),
        migrations.CreateModel(
            name='BookEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher', models.CharField(max_length=255)),
                ('publication_date', models.DateField()),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='editions', to='books.book')),
            ],
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=6, unique=True)),
                ('condition', models.CharField(choices=[('Very Good', 'Very Good'), ('Good', 'Good'), ('Acceptable', 'Acceptable'), ('Poor', 'Poor')], default='Very Good', max_length=20)),
                ('is_available', models.BooleanField(db_index=True, default=True, help_text='Indicates whether the specific copy of the bookis currently available for borrowing.')),
                ('book_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='copies', to='books.bookedition')),
            ],
        ),
        migrations.CreateModel(
            name='BookLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_date', models.DateTimeField(auto_now_add=True, help_text='The date and time when the book was borrowed.')),
                ('due_date', models.DateTimeField(help_text='The date and time when the book is due to be returned.')),
                ('return_date', models.DateTimeField(blank=True, default=None, help_text='The date and time when the book was returned.', null=True)),
                ('book_copy', models.ForeignKey(help_text='The specific copy of the book that has been borrowed.', on_delete=django.db.models.deletion.PROTECT, related_name='loans', to='books.bookcopy')),
                ('visitor', models.ForeignKey(help_text='The visitor who has borrowed the book copy.', on_delete=django.db.models.deletion.PROTECT, related_name='book_loans', to='visitors.visitor')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('return_date__isnull', True)), fields=('book_copy',), name='unique_active_loan_per_book_copy')],
            },
        ),
    ]
